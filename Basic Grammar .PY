# =============================================================================
# 🐍 Python 기초 문법 가이드
# =============================================================================

# -----------------------------------------------------------------------------
# 📦 변수 (Variables)
# 변수는 값을 저장하는 공간으로, 데이터에 이름을 붙여 사용할 수 있게 해줍니다.
# -----------------------------------------------------------------------------

name = "최정"   # 이름이라는 값을 저장
age = 13        # 나이라는 값을 저장

# 🏷️ 변수 명명 규칙
# - 영문자, 숫자, 언더스코어(_)만 사용 가능
# - 숫자로 시작할 수 없음
# - 대소문자 구분
# - 예약어(if, for, while 등) 사용 불가

# 올바른 변수명
user_name = "김철수"
age2 = 25
_private = "비공개"

# 잘못된 변수명 (주석 처리)
# 2age = 25      # 숫자로 시작
# user-name = "" # 하이픈 사용
# if = 10        # 예약어 사용

# -----------------------------------------------------------------------------
# 🎯 데이터 타입 (Data Types)
# -----------------------------------------------------------------------------

# 정수형 (int) - 소수점이 없는 숫자로, 양수/음수/0 모두 가능
positive = 100      # 양수
negative = -50      # 음수
zero = 0           # 영

# 실수형 (float) - 소수점이 있는 숫자로, 정밀한 계산에 사용
pi = 3.14159
temperature = -2.5
scientific = 1.23e-4  # 과학적 표기법 (0.000123)

# 문자열 (str) - 문자 또는 글자를 저장하며, 큰따옴표(") 또는 작은따옴표(') 사용
single_quote = '안녕하세요'
double_quote = "Hello, World!"
multiline = """여러 줄
문자열도
가능합니다"""

# 문자열 연산
greeting = "안녕" + "하세요"  # 문자열 연결
repeat = "파이썬" * 3        # 문자열 반복: "파이썬파이썬파이썬"

# 불리언 (bool) - 참(True)과 거짓(False) 둘 중 하나의 값만 가짐
is_adult = True
is_student = False
is_empty = bool("")     # False (빈 문자열)
is_valid = bool("텍스트") # True (비어있지 않은 문자열)

# -----------------------------------------------------------------------------
# 🔄 형 변환 (Type Casting)
# 데이터 타입을 다른 타입으로 변환하는 방법
# -----------------------------------------------------------------------------

# 문자열을 숫자로
num_str = "20"
num_int = int(num_str)      # 20 (정수)
num_float = float(num_str)  # 20.0 (실수)

# 숫자를 문자열로
age = 25
age_str = str(age)          # "25"

# 타입 확인
print(type(num_int))        # <class 'int'>
print(type(age_str))        # <class 'str'>

# -----------------------------------------------------------------------------
# ➕ 연산자 (Operators)
# -----------------------------------------------------------------------------

# 산술 연산자
a, b = 15, 4

add = a + b    # 덧셈:        19
sub = a - b    # 뺄셈:        11
mul = a * b    # 곱셈:        60
div = a / b    # 나눗셈(실수): 3.75
floor_div = a // b  # 몫(정수):     3
mod = a % b    # 나머지:       3
exp = a ** b   # 제곱:        50625 (15의 4제곱)

# 비교 연산자
equal = (a == b)     # 같음:           False
not_equal = (a != b) # 다름:           True
greater = (a > b)    # 큼:             True
less = (a < b)       # 작음:           False
greater_eq = (a >= b) # 크거나 같음:    True
less_eq = (a <= b)   # 작거나 같음:    False

# 논리 연산자
and_result = (a > 10) and (b < 10)  # 둘 다 참이어야 참: True
or_result = (a > 20) or (b < 10)    # 하나만 참이어도 참: True
not_result = not(a == b)            # 결과를 반대로:     True

# 할당 연산자
x = 10
x += 5   # x = x + 5  → x는 15
x -= 3   # x = x - 3  → x는 12
x *= 2   # x = x * 2  → x는 24
x /= 4   # x = x / 4  → x는 6.0
x //= 2  # x = x // 2 → x는 3.0
x %= 2   # x = x % 2  → x는 1.0
x **= 3  # x = x ** 3 → x는 1.0

# -----------------------------------------------------------------------------
# 🔢 연산자 우선순위
# 수학의 연산 순서와 유사하게 적용됩니다.
# -----------------------------------------------------------------------------

result1 = 2 + 3 * 4     # 곱셈 먼저: 2 + 12 = 14
result2 = (2 + 3) * 4   # 괄호 우선: 5 * 4 = 20
result3 = 2 ** 3 * 2    # 제곱 먼저: 8 * 2 = 16

# 우선순위 (높음 → 낮음)
# 1. 괄호 ()
# 2. 제곱 **
# 3. 곱셈 *, 나눗셈 /, 몫 //, 나머지 %
# 4. 덧셈 +, 뺄셈 -
# 5. 비교연산자 ==, !=, >, <, >=, <=
# 6. 논리연산자 not, and, or

# -----------------------------------------------------------------------------
# 📐 들여쓰기 (Indentation)
# Python은 들여쓰기로 코드 블록을 구분합니다. 일반적으로 스페이스 4개 또는 탭 1개를 사용
# -----------------------------------------------------------------------------

age = 13

if age >= 18:
    print("성인입니다.")           # 4칸 들여쓰기
    print("투표권이 있습니다.")     # 같은 레벨
else:
    print("청소년입니다.")         # 4칸 들여쓰기
    if age >= 13:
        print("중학생 이상입니다.")  # 8칸 들여쓰기 (중첩)

# 들여쓰기 규칙
# - 같은 블록 내에서는 동일한 들여쓰기 사용
# - 탭과 스페이스를 혼용하지 않기
# - 일관성 있게 유지하기

# -----------------------------------------------------------------------------
# 💡 추가 팁
# -----------------------------------------------------------------------------

# f-string (포맷 문자열)
name = "최정"
age = 13
message = f"안녕하세요! 제 이름은 {name}이고, 나이는 {age}살입니다."
print(message)  # 안녕하세요! 제 이름은 최정이고, 나이는 13살입니다.

# 여러 변수 할당
x, y, z = 1, 2, 3  # 한 번에 여러 변수 할당
a = b = c = 10     # 같은 값 할당

# 입력 받기
user_name = input("이름을 입력하세요: ")
user_age = int(input("나이를 입력하세요: "))  # 문자열을 정수로 변환

# 타입 확인 및 변환 예제
print(f"user_name의 타입: {type(user_name)}")
print(f"user_age의 타입: {type(user_age)}")

# 문자열 메소드 예제
text = "Python Programming"
print(text.upper())     # 대문자로: PYTHON PROGRAMMING
print(text.lower())     # 소문자로: python programming
print(text.split())     # 공백으로 분할: ['Python', 'Programming']
print(len(text))        # 길이: 18

# 숫자 관련 함수
number = -3.7
print(abs(number))      # 절댓값: 3.7
print(round(3.14159, 2)) # 반올림: 3.14
print(max(1, 5, 3))     # 최댓값: 5
print(min(1, 5, 3))     # 최솟값: 1

# =============================================================================
# Python의 기본 문법🚀
# =============================================================================
