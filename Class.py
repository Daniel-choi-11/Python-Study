'''
객체 지향 프로그래밍(Object Oriented Programming)

객체 지향 프로그래밍은 컴퓨터 프로그래밍 패러다임중 하나로
프로그래밍에서 필요한 데이터를 추상화시켜 상태와 행위를 가진 객체를 만들고 그 객체들간의 유기적인 상호작용을 통해 로직을 구상하는 방법이다.
'''

'''
OOP 장점

1. 코드 재사용이 쉽다
남이 만든 클래스를 가져와서 사용할수있고, 상속을 통해 확장해서 사용할수있다

2. 유지보수가 쉽다
절차지향 프로그래밍에서는 코드를 수정해야할때 일일히 수정하는 반면, 
객체지향 프로그래밍에서는 수정해야되는 부분이 클래스 내부의 멤버변수혹은 method으로 존재하기 때문에 해당부분만 수정하면된다.

3. 대형프로젝트에 적합하다
클래스 단위로 모듈화시켜서 개발할수있으므로, 여러명에서 프로젝트를 개발할때 업무분단하기 쉽다.

OOP 단점

1. 처리 속도가 상대적으로 느림
2. 객체가 많으면 용량이 커짐
3. 설계시 많은 시간과 노력이 필요하다
'''

'''
Q. 클래스와 인스턴스(객체)는 무엇인지 설명해주세요.
클래스 : 어떤 문제를 해결하기 위한 데이터를 만들기 위해 추상화를 거쳐 집단에 속하는 속성(attribute)과 행위(behavior)를 변수와 메서드로 정의한 것으로 
객체를 만들기 위한 메타정보라고 볼 수 있다.

객체(인스턴스 : 클래스에서 정의한 것을 토대로 실제 메모리에 할당된 것으로 실제 프로그램에서 사용되는 데이터
'''
